# Use root/example as user/password credentials
version: "3.7"

services:

  mongo:
    build:
      dockerfile: src/dockerfiles/Dockerfile-mongo
      context: .
    image: be-upp/mongo
    container_name: be-upp-mongo

    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}

    networks:
      - be-upp

    ports:
      - ${MONGO_PORT}:${MONGO_PORT}

    volumes:
      - be_upp_db_mongo:/data/db

  mongo-express:
    build:
      dockerfile: src/dockerfiles/Dockerfile-mongo-express
      context: .
    image: be-upp/mongo-express
    container_name: be-upp-mongo-express
    restart: unless-stopped

    ports:
      - ${ME_CONFIG_PORT}:${ME_CONFIG_PORT}
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
      ME_CONFIG_MONGODB_SERVER: ${ME_CONFIG_MONGODB_SERVER}
    depends_on:
      - mongo
    networks:
      - be-upp

  api:
    build:
      dockerfile: src/dockerfiles/Dockerfile-api
      context: .
    image: be-upp/api
    container_name: be-upp-api
    volumes:
      - ./src/entrypoints/entrypoint-api.sh:/usr/local/bin/entrypoint.sh
    command: entrypoint.sh
    ports:
      - ${API_PORT}:${API_PORT}
    environment:
      API_PORT: ${API_PORT}
      MONGO_PORT: ${MONGO_PORT}
    networks:
      - be-upp

  app:
    build:
      dockerfile: src/dockerfiles/Dockerfile-app
      context: .
    image: be-upp/app
    container_name: be-upp-app
    volumes:
      - ./src/entrypoints/entrypoint-app.sh:/usr/local/bin/entrypoint.sh
    command: entrypoint.sh
    networks:
      - be-upp

volumes:
  be_upp_db_mongo:

networks:
  be-upp:
    driver: bridge