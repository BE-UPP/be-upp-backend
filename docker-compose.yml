# Use root/example as user/password credentials
version: '3.1'

services:

  mongo:
    image: be-upp/mongo:latest
    container_name: be-upp-mongo

    build:
      dockerfile: src/dockerfiles/Dockerfile-mongo
      context: .

    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}

    networks:
      - mongo

    ports:
      - ${ME_CONFIG_MONGODB_PORT}:${ME_CONFIG_MONGODB_PORT}

    volumes:
      - db_dev_mongo:/data/db

  mongo-express:
    image: be-upp/mongo-express:latest
    container_name: be-upp-mongo-express

    build:
      dockerfile: src/dockerfiles/Dockerfile-mongo-express
      context: .

    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
      ME_CONFIG_MONGODB_PORT: ${ME_CONFIG_MONGODB_PORT}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
      ME_CONFIG_MONGODB_SERVER: ${ME_CONFIG_MONGODB_SERVER}
    networks:
      - mongo

  be-upp-dev:
    image: be-upp/dev:latest
    container_name: be-upp-dev

    build:
      dockerfile: src/dockerfiles/Dockerfile-dev
      context: .

volumes:
  db_dev_mongo:

networks:
  mongo: